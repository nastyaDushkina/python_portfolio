ЗАДАНИЕ №1 (см. score.py)
""" при написании программы использовался паттерн проектирования 'Состояние' """

Вас взяли на работу в молодой стартап. Идея стартапа - предоставлять сервис расчета результатов игр.
Начать решили с боулинга, упрощенной версии.

Правила такие.

 Всего 10 кеглей. Игра состоит из 10 фреймов. В одном фрейме до 2х бросков, цель - сбить все кегли.
 Результаты фрейма записываются символами:
   «Х» – «strike», все 10 кеглей сбиты первым броском
   «<число>/», например «4/» - «spare», в первый бросок сбиты 4 кегли, во второй – остальные
   «<число><число>», например, «34» – в первый бросок сбито 3, во второй – 4 кегли.
   вместо <число> может стоять прочерк «-», например «-4» - ни одной кегли не было сбито за первый бросок
 Результат игры – строка с записью результатов фреймов. Символов-разделителей между фреймами нет.
 Например, для игры из 4 фреймов запись результатов может выглядеть так:
   «Х4/34-4»
 Предлагается упрощенный способ подсчета количества очков:
   «Х» – strike всегда 20 очков
   «4/» - spare всегда 15 очков
   «34» – сумма 3+4=7
   «-4» - сумма 0+4=4
 То есть для игры «Х4/34-4» сумма очков равна 20+15+7+4=46

 Надо написать python-модуль (назвать bowling), предоставляющий API расчета количества очков:
 функцию get_score, принимающую параметр game_result. Функция должна выбрасывать исключения,
 когда game_result содержит некорректные данные. Использовать стандартные исключения по максимуму,
 если не хватает - создать свои.

 Обязательно написать тесты на этот модуль. Расположить в папке tests.

 Из текущего файла сделать консольную утилиту для определения количества очков, с помощью пакета argparse
 Скрипт должен принимать параметр --result и печатать на консоль:
   Количество очков для результатов ХХХ - УУУ.

 При написании кода помнить, что заказчик может захотеть доработок и новых возможностей...


ЗАДАНИЕ №2 (см. tournament.py)

 Прибежал менеджер и сказал что нужно срочно просчитать протокол турнира по боулингу в файле tournament.txt

 Пример записи из лога турнира
   ### Tour 1
   Алексей	35612/----2/8-6/3/4/
   Татьяна	62334/6/4/44X361/X
   Давид	--8/--8/4/8/-224----
   Павел	----15623113-95/7/26
   Роман	7/428/--4-533/34811/
   winner is .........

 Нужно сформировать выходной файл tournament_result.txt c записями вида
   ### Tour 1
   Алексей	35612/----2/8-6/3/4/    98
   Татьяна	62334/6/4/44X361/X      131
   Давид	--8/--8/4/8/-224----    68
   Павел	----15623113-95/7/26    69
   Роман	7/428/--4-533/34811/    94
   winner is Татьяна

 Код обаботки файла расположить отдельном модуле, модуль bowling использовать для получения количества очков
 одного участника. Если захочется изменить содержимое модуля bowling - тесты должны помочь.

 Из текущего файла сделать консольный скрипт для формирования файла с результатами турнира.
 Параметры скрипта: --input <файл протокола турнира> и --output <файл результатов турнира>


 Усложненное задание (делать по желанию)

 После обработки протокола турнира вывести на консоль рейтинг игроков в виде таблицы:

 +----------+------------------+--------------+
 | Игрок    |  сыграно матчей  |  всего побед |
 +----------+------------------+--------------+
 | Татьяна  |        99        |      23      |
 ...
 | Алексей  |        20        |       5      |
 +----------+------------------+--------------+


ЗАДАНИЕ №3 (см. score.py)
""" при написании программы использовался паттерн проектирования 'Состояние' """

 Прибежал менеджер и сказал что нужно срочно изменить правила подсчета очков в игре.
 "Выходим на внешний рынок, а там правила игры другие!" - сказал он.

 Правила подсчета очков изменяются так:

 Если во фрейме страйк, сумма очков за этот фрейм будет равна количеству сбитых кеглей в этом фрейме (10 кеглей)
 плюс количество фактически сбитых кеглей за два следующих броска шара (в одном или двух фреймах,
 в зависимости от того, был ли страйк в следующем броске).
 Например: первый бросок шара после страйка - тоже страйк, то +10 (сбил 10 кеглей)
 и второй бросок шара - сбил 2 кегли (не страйк, не важно как закончится этот фрейм - считаем кегли) - то еще +2.

 Если во фрейме сбит спэр, то сумма очков будет равна количеству сбитых кеглей в этом фрейме (10 кеглей)
 плюс количество фактически сбитых кеглей за первый бросок шара в следующем фрейме.

 Если фрейм остался открытым, то сумма очков будет равна количеству сбитых кеглей в этом фрейме.

 Страйк и спэр в последнем фрейме - по 10 очков.

 То есть для игры «Х4/34» сумма очков равна 10+10 + 10+3 + 3+4 = 40,
 а для игры «ХXX347/21» - 10+20 + 10+13 + 10+7 + 3+4 + 10+2 + 3 = 92

 Необходимые изменения сделать во всех модулях. Тесты - дополнить.

 "И да, старые правила должны остаться! для внутреннего рынка..." - уточнил менеджер напоследок.
