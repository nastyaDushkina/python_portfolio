ЗАДАНИЕ №1 (см. char_stat.py)
""" шаблонный метод """

    Подсчитать статистику по буквам в одной из частей романа Война и Мир.
    Входные параметры: файл для сканирования
    Статистику считать только для букв алфавита (см функцию .isalpha() для строк)

    Вывести на консоль упорядоченную статистику в виде
    +---------+----------+
    |  буква  | частота  |
    +---------+----------+
    |    А    |   77777  |
    |    Б    |   55555  |
    |   ...   |   .....  |
    |    a    |   33333  |
    |    б    |   11111  |
    |   ...   |   .....  |
    +---------+----------+
    |  итого  | 9999999  |
    +---------+----------+

    Упорядочивание по частоте - по убыванию. Ширину таблицы подберите по своему вкусу

    Требования к коду: он должен быть готовым к расширению функциональности - делать сразу на классах.
    Для этого пригодится шаблон проектирование "Шаблонный метод"

    После зачета первого этапа нужно сделать упорядочивание статистики
    - по частоте по возрастанию
    - по алфавиту по возрастанию
    - по алфавиту по убыванию


ЗАДАНИЕ №2 (см. log_parser.py)
""" шаблонный метод """

    Имеется файл events.txt вида:

    [2018-05-17 01:55:52.665804] NOK
    [2018-05-17 01:56:23.665804] OK
    [2018-05-17 01:56:55.665804] OK
    [2018-05-17 01:57:16.665804] NOK
    [2018-05-17 01:57:58.665804] OK
    ...

    Напишите программу, которая считывает файл
    и выводит число событий NOK за каждую минуту в другой файл в формате

    [2018-05-17 01:57] 1234
    [2018-05-17 01:58] 4321
    ...

    Входные параметры: файл для анализа, файл результата

    Требования к коду: он должен быть готовым к расширению функциональности - делать сразу на классах.
    Для этого пригодится шаблон проектирование "Шаблонный метод"

    После зачета первого этапа нужно сделать группировку событий
    - по часам
    - по месяцу
    - по году


ЗАДАНИЕ №3 (см. files_arrange.py)
""" шаблонный метод """

    Нужно написать скрипт для упорядочивания фотографий (вообще любых файлов)
    Скрипт должен разложить файлы из одной папки по годам и месяцам в другую.
    Например, так:
    исходная папка
       icons/cat.jpg
       icons/man.jpg
       icons/new_year_01.jpg
    результирующая папка
       icons_by_year/2018/05/cat.jpg
       icons_by_year/2018/05/man.jpg
       icons_by_year/2017/12/new_year_01.jpg

    Входные параметры основной функции: папка для сканирования, целевая папка.
    Имена файлов в процессе работы скрипта не менять, год и месяц взять из времени последней модификации файла
    (время создания файла берется по разному в разых ОС - см https://clck.ru/PBCAX - поэтому берем время модификации).

    Файлы для работы взять из архива icons.zip - раззиповать проводником ОС в папку icons перед написанием кода.
    Имя целевой папки - icons_by_year (тогда она не попадет в коммит, см .gitignore в папке ДЗ)

    Чтение документации/гугла по функциям - приветствуется. Как и поиск альтернативных вариантов :)

    Требования к коду: он должен быть готовым к расширению функциональности - делать сразу на классах.
    Усложненное задание (делать по желанию)
    Нужно обрабатывать zip-файл, содержащий фотографии, без предварительного извлечения файлов в папку.
    Это относится только к чтению файлов в архиве. В случае паттерна "Шаблонный метод" изменяется способ
    получения данных (читаем os.walk() или zip.namelist и т.д.)
    Документация по zipfile: API https://docs.python.org/3/library/zipfile.html
